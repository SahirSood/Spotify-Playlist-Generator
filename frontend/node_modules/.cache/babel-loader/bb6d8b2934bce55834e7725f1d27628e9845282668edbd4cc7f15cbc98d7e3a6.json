{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\Spotify-Playlist-Generator\\\\frontend\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [accessToken, setAccessToken] = useState('');\n  const [refreshToken, setRefreshToken] = useState('');\n  const [playlists, setPlaylists] = useState([]);\n  const [likedSongs, setLikedSongs] = useState([]);\n  const [showSidebar, setShowSidebar] = useState(false); // Fix 1 - Added this\n  const [selectedPlaylistName, setSelectedPlaylistName] = useState('');\n  const [nextLikedSongsUrl, setNextLikedSongsUrl] = useState('');\n  const [nextPlaylistSongsUrl, setNextPlaylistSongsUrl] = useState('');\n\n  // Extract tokens from URL or LocalStorage\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const access_token = params.get('access_token') || localStorage.getItem('spotify_access_token');\n    const refresh_token = params.get('refresh_token') || localStorage.getItem('spotify_refresh_token');\n    if (access_token && refresh_token) {\n      setAccessToken(access_token);\n      setRefreshToken(refresh_token);\n\n      // Save tokens for future use\n      localStorage.setItem('spotify_access_token', access_token);\n      localStorage.setItem('spotify_refresh_token', refresh_token);\n    }\n  }, []);\n\n  // Fetch playlists\n  useEffect(() => {\n    if (!accessToken) return;\n    const fetchPlaylists = async () => {\n      try {\n        const response = await fetch('https://api.spotify.com/v1/me/playlists', {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        const data = await response.json();\n\n        // Add \"Liked Songs\" as the first fake playlist\n        const likedSongsPlaceholder = {\n          id: 'liked-songs',\n          name: '❤️ Liked Songs'\n        };\n        const allPlaylists = [likedSongsPlaceholder, ...(data.items || [])];\n        setPlaylists(allPlaylists);\n      } catch (error) {\n        console.error('Error fetching playlists:', error);\n      }\n    };\n    fetchPlaylists();\n  }, [accessToken]);\n\n  // Fetch all liked songs (with pagination)\n  const fetchLikedSongs = async () => {\n    setSelectedPlaylistName('❤️ Liked Songs');\n    setShowSidebar(true);\n    setLikedSongs([]); // Clear any old songs\n\n    try {\n      const response = await fetch('https://api.spotify.com/v1/me/tracks', {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setLikedSongs(data.items); // Show the first 50 songs\n      setNextLikedSongsUrl(data.next); // Save the next page URL for later\n    } catch (error) {\n      console.error('Error fetching liked songs:', error);\n      alert('Failed to fetch liked songs. Please try again.');\n    }\n  };\n  const loadMoreLikedSongs = async () => {\n    if (!nextLikedSongsUrl) return; // No more pages\n\n    try {\n      const response = await fetch(nextLikedSongsUrl, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setLikedSongs(prevSongs => [...prevSongs, ...data.items]); // Add new songs to list\n      setNextLikedSongsUrl(data.next); // Update next page URL (or null if no more)\n    } catch (error) {\n      console.error('Error fetching more liked songs:', error);\n      alert('Failed to load more liked songs. Please try again.');\n    }\n  };\n  const fetchPlaylistSongs = async playlist => {\n    setSelectedPlaylistName(playlist.name); // Playlist has an id and a name\n    setShowSidebar(true); // this is what we use to show the sidebar, can change to a generic name that works for both palylists and likedsongs\n    setLikedSongs([]); // Same as above, list of songs that will be showing, we are clearing it\n    setNextPlaylistSongsUrl(''); // Clear any old next URL\n\n    try {\n      const firstPageUrl = `https://api.spotify.com/v1/playlists/${playlist.id}/tracks`;\n      const response = await fetch(firstPageUrl, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setLikedSongs(data.items);\n      setNextPlaylistSongsUrl(data.next);\n    } catch (error) {\n      console.error('Error fetching playlist songs:', error);\n      alert('Failed to fetch playlist songs. Please try again.');\n    }\n  };\n  const loadMorePlaylistSongs = async () => {\n    if (!nextPlaylistSongsUrl) return;\n    try {\n      const response = await fetch(nextPlaylistSongsUrl, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      const data = await response.json();\n      setLikedSongs(prevSongs => [...prevSongs, ...data.items]); // Append new songs\n      setNextPlaylistSongsUrl(data.next); // Update next page URL\n    } catch (error) {\n      console.error('Error fetching more songs for playlist:', error);\n    }\n  };\n  const handlePlaylistClick = playlist => {\n    if (playlist.id === 'liked-songs') {\n      fetchLikedSongs();\n    } else {\n      fetchPlaylistSongs(playlist);\n    }\n  };\n  const handleScroll = event => {\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight\n    } = event.target;\n    if (scrollTop + clientHeight >= scrollHeight - 5) {\n      // If viewing Liked Songs, load more liked songs\n      if (selectedPlaylistName === '❤️ Liked Songs') {\n        loadMoreLikedSongs();\n      } else {\n        loadMorePlaylistSongs();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100vw',\n      position: 'relative',\n      overflow: 'hidden',\n      background: 'linear-gradient(135deg, #1db954 0%, #191414 100%)',\n      fontFamily: '\"Circular\", \"Helvetica Neue\", Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100%',\n        padding: '30px',\n        transition: 'transform 0.3s ease-in-out',\n        transform: showSidebar ? 'translateX(-350px)' : 'translateX(0)',\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '40px',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: 'white',\n            fontSize: '3rem',\n            fontWeight: 'bold',\n            margin: '0 0 10px 0',\n            textShadow: '0 2px 4px rgba(0,0,0,0.3)'\n          },\n          children: \"\\uD83C\\uDFB5 Spotify Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'rgba(255,255,255,0.8)',\n            fontSize: '1.1rem',\n            margin: '0'\n          },\n          children: \"Discover and explore your music collection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), accessToken ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'rgba(29, 185, 84, 0.2)',\n          border: '2px solid #1db954',\n          borderRadius: '12px',\n          padding: '15px',\n          marginBottom: '30px',\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#1db954',\n            fontSize: '1.1rem',\n            fontWeight: 'bold'\n          },\n          children: \"\\u2705 Connected to Spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'rgba(231, 76, 60, 0.2)',\n          border: '2px solid #e74c3c',\n          borderRadius: '12px',\n          padding: '15px',\n          marginBottom: '30px',\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#e74c3c',\n            fontSize: '1.1rem',\n            fontWeight: 'bold'\n          },\n          children: \"\\u274C Not Connected to Spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: 'white',\n            fontSize: '2rem',\n            marginBottom: '25px',\n            textAlign: 'center'\n          },\n          children: \"Your Playlists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',\n            gap: '20px',\n            maxWidth: '1200px',\n            margin: '0 auto'\n          },\n          children: playlists.map(playlist => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handlePlaylistClick(playlist),\n            style: {\n              background: 'rgba(255, 255, 255, 0.1)',\n              backdropFilter: 'blur(10px)',\n              border: '1px solid rgba(255, 255, 255, 0.2)',\n              borderRadius: '16px',\n              padding: '20px',\n              cursor: 'pointer',\n              transition: 'all 0.3s ease',\n              textAlign: 'center',\n              position: 'relative',\n              overflow: 'hidden'\n            },\n            onMouseEnter: e => {\n              e.target.style.transform = 'translateY(-5px)';\n              e.target.style.boxShadow = '0 10px 25px rgba(0,0,0,0.3)';\n              e.target.style.background = 'rgba(255, 255, 255, 0.15)';\n            },\n            onMouseLeave: e => {\n              e.target.style.transform = 'translateY(0)';\n              e.target.style.boxShadow = 'none';\n              e.target.style.background = 'rgba(255, 255, 255, 0.1)';\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '2.5rem',\n                marginBottom: '10px'\n              },\n              children: playlist.id === 'liked-songs' ? '❤️' : '🎵'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                color: 'white',\n                fontSize: '1.2rem',\n                fontWeight: 'bold',\n                margin: '0 0 5px 0',\n                wordBreak: 'break-word'\n              },\n              children: playlist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'rgba(255, 255, 255, 0.7)',\n                fontSize: '0.9rem',\n                margin: '0'\n              },\n              children: \"Click to view tracks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 33\n            }, this)]\n          }, playlist.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '0',\n        right: showSidebar ? '0' : '-400px',\n        width: '400px',\n        height: '100vh',\n        background: 'rgba(25, 20, 20, 0.95)',\n        backdropFilter: 'blur(15px)',\n        borderLeft: '1px solid rgba(255, 255, 255, 0.1)',\n        transition: 'right 0.3s ease-in-out',\n        zIndex: 1000,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '20px',\n          borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n          background: 'rgba(29, 185, 84, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: 'white',\n              fontSize: '1.5rem',\n              margin: '0',\n              wordBreak: 'break-word'\n            },\n            children: selectedPlaylistName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowSidebar(false),\n            style: {\n              background: 'rgba(231, 76, 60, 0.2)',\n              border: '1px solid #e74c3c',\n              borderRadius: '8px',\n              color: '#e74c3c',\n              padding: '8px 12px',\n              cursor: 'pointer',\n              fontSize: '0.9rem',\n              fontWeight: 'bold',\n              transition: 'all 0.2s ease'\n            },\n            onMouseEnter: e => {\n              e.target.style.background = '#e74c3c';\n              e.target.style.color = 'white';\n            },\n            onMouseLeave: e => {\n              e.target.style.background = 'rgba(231, 76, 60, 0.2)';\n              e.target.style.color = '#e74c3c';\n            },\n            children: \"\\u2715 Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'rgba(255, 255, 255, 0.7)',\n            fontSize: '0.9rem',\n            margin: '0'\n          },\n          children: [likedSongs.length, \" tracks loaded\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '0'\n        },\n        onScroll: handleScroll,\n        children: likedSongs.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: likedSongs.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '15px 20px',\n              borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n              transition: 'background 0.2s ease',\n              cursor: 'pointer'\n            },\n            onMouseEnter: e => {\n              e.target.style.background = 'rgba(255, 255, 255, 0.05)';\n            },\n            onMouseLeave: e => {\n              e.target.style.background = 'transparent';\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: '15px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  minWidth: '30px',\n                  color: 'rgba(255, 255, 255, 0.5)',\n                  fontSize: '0.9rem',\n                  textAlign: 'center'\n                },\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  flex: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: 'white',\n                    fontSize: '1rem',\n                    fontWeight: '500',\n                    marginBottom: '4px',\n                    wordBreak: 'break-word'\n                  },\n                  children: song.track.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: 'rgba(255, 255, 255, 0.7)',\n                    fontSize: '0.85rem',\n                    wordBreak: 'break-word'\n                  },\n                  children: song.track.artists.map(a => a.name).join(', ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 37\n            }, this)\n          }, song.track.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '40px 20px',\n            textAlign: 'center',\n            color: 'rgba(255, 255, 255, 0.5)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '3rem',\n              marginBottom: '20px'\n            },\n            children: \"\\uD83C\\uDFB5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No tracks found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }, this), showSidebar && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        background: 'rgba(0, 0, 0, 0.3)',\n        zIndex: 999\n      },\n      onClick: () => setShowSidebar(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"zqpu3aiIvMZT7ZHPnvrJeyICICY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Dashboard","_s","accessToken","setAccessToken","refreshToken","setRefreshToken","playlists","setPlaylists","likedSongs","setLikedSongs","showSidebar","setShowSidebar","selectedPlaylistName","setSelectedPlaylistName","nextLikedSongsUrl","setNextLikedSongsUrl","nextPlaylistSongsUrl","setNextPlaylistSongsUrl","params","URLSearchParams","window","location","search","access_token","get","localStorage","getItem","refresh_token","setItem","fetchPlaylists","response","fetch","headers","Authorization","data","json","likedSongsPlaceholder","id","name","allPlaylists","items","error","console","fetchLikedSongs","ok","Error","status","next","alert","loadMoreLikedSongs","prevSongs","fetchPlaylistSongs","playlist","firstPageUrl","loadMorePlaylistSongs","handlePlaylistClick","handleScroll","event","scrollTop","scrollHeight","clientHeight","target","style","height","width","position","overflow","background","fontFamily","children","padding","transition","transform","overflowY","marginBottom","textAlign","color","fontSize","fontWeight","margin","textShadow","fileName","_jsxFileName","lineNumber","columnNumber","border","borderRadius","display","gridTemplateColumns","gap","maxWidth","map","onClick","backdropFilter","cursor","onMouseEnter","e","boxShadow","onMouseLeave","wordBreak","top","right","borderLeft","zIndex","flexDirection","borderBottom","justifyContent","alignItems","length","flex","onScroll","song","index","minWidth","track","artists","a","join","left","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Desktop/Spotify-Playlist-Generator/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Dashboard() {\r\n    const [accessToken, setAccessToken] = useState('');\r\n    const [refreshToken, setRefreshToken] = useState('');\r\n    const [playlists, setPlaylists] = useState([]);\r\n    const [likedSongs, setLikedSongs] = useState([]);\r\n    const [showSidebar, setShowSidebar] = useState(false);  // Fix 1 - Added this\r\n    const [selectedPlaylistName, setSelectedPlaylistName] = useState('');\r\n    const [nextLikedSongsUrl, setNextLikedSongsUrl] = useState('');\r\n    const [nextPlaylistSongsUrl, setNextPlaylistSongsUrl] = useState('');\r\n\r\n\r\n    // Extract tokens from URL or LocalStorage\r\n    useEffect(() => {\r\n        const params = new URLSearchParams(window.location.search);\r\n        const access_token = params.get('access_token') || localStorage.getItem('spotify_access_token');\r\n        const refresh_token = params.get('refresh_token') || localStorage.getItem('spotify_refresh_token');\r\n\r\n        if (access_token && refresh_token) {\r\n            setAccessToken(access_token);\r\n            setRefreshToken(refresh_token);\r\n\r\n            // Save tokens for future use\r\n            localStorage.setItem('spotify_access_token', access_token);\r\n            localStorage.setItem('spotify_refresh_token', refresh_token);\r\n        }\r\n    }, []);\r\n\r\n    // Fetch playlists\r\n    useEffect(() => {\r\n        if (!accessToken) return;\r\n\r\n        const fetchPlaylists = async () => {\r\n            try {\r\n                const response = await fetch('https://api.spotify.com/v1/me/playlists', {\r\n                    headers: { Authorization: `Bearer ${accessToken}` }\r\n                });\r\n                const data = await response.json();\r\n\r\n                // Add \"Liked Songs\" as the first fake playlist\r\n                const likedSongsPlaceholder = { id: 'liked-songs', name: '❤️ Liked Songs' };\r\n                const allPlaylists = [likedSongsPlaceholder, ...(data.items || [])];\r\n\r\n                setPlaylists(allPlaylists);\r\n            } catch (error) {\r\n                console.error('Error fetching playlists:', error);\r\n            }\r\n        };\r\n\r\n        fetchPlaylists();\r\n    }, [accessToken]);\r\n\r\n\r\n    // Fetch all liked songs (with pagination)\r\n    const fetchLikedSongs = async () => {\r\n        setSelectedPlaylistName('❤️ Liked Songs');\r\n        setShowSidebar(true);\r\n        setLikedSongs([]);   // Clear any old songs\r\n    \r\n        try {\r\n            const response = await fetch('https://api.spotify.com/v1/me/tracks', {\r\n                headers: { Authorization: `Bearer ${accessToken}` }\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n    \r\n            const data = await response.json();\r\n    \r\n            setLikedSongs(data.items);  // Show the first 50 songs\r\n            setNextLikedSongsUrl(data.next);  // Save the next page URL for later\r\n        } catch (error) {\r\n            console.error('Error fetching liked songs:', error);\r\n            alert('Failed to fetch liked songs. Please try again.');\r\n        }\r\n    };\r\n\r\n    const loadMoreLikedSongs = async () => {\r\n        if (!nextLikedSongsUrl) return;  // No more pages\r\n    \r\n        try {\r\n            const response = await fetch(nextLikedSongsUrl, {\r\n                headers: { Authorization: `Bearer ${accessToken}` }\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n    \r\n            const data = await response.json();\r\n    \r\n            setLikedSongs((prevSongs) => [...prevSongs, ...data.items]);  // Add new songs to list\r\n            setNextLikedSongsUrl(data.next);  // Update next page URL (or null if no more)\r\n        } catch (error) {\r\n            console.error('Error fetching more liked songs:', error);\r\n            alert('Failed to load more liked songs. Please try again.');\r\n        }\r\n    };\r\n    \r\n\r\n    const fetchPlaylistSongs = async(playlist) => {\r\n        setSelectedPlaylistName(playlist.name); // Playlist has an id and a name\r\n        setShowSidebar(true); // this is what we use to show the sidebar, can change to a generic name that works for both palylists and likedsongs\r\n        setLikedSongs([]);  // Same as above, list of songs that will be showing, we are clearing it\r\n        setNextPlaylistSongsUrl('');  // Clear any old next URL\r\n        \r\n        try {\r\n            const firstPageUrl = `https://api.spotify.com/v1/playlists/${playlist.id}/tracks`;\r\n\r\n            const response = await fetch(firstPageUrl, {\r\n                headers: { Authorization: `Bearer ${accessToken}` }\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            setLikedSongs(data.items);\r\n            setNextPlaylistSongsUrl(data.next);\r\n        } catch (error) {\r\n            console.error('Error fetching playlist songs:', error);\r\n            alert('Failed to fetch playlist songs. Please try again.');\r\n        }\r\n    }\r\n\r\n    const loadMorePlaylistSongs = async () => {\r\n        if (!nextPlaylistSongsUrl) return;\r\n    \r\n        try {\r\n            const response = await fetch(nextPlaylistSongsUrl, {\r\n                headers: { Authorization: `Bearer ${accessToken}` }\r\n            });\r\n    \r\n            const data = await response.json();\r\n    \r\n            setLikedSongs((prevSongs) => [...prevSongs, ...data.items]); // Append new songs\r\n            setNextPlaylistSongsUrl(data.next); // Update next page URL\r\n        } catch (error) {\r\n            console.error('Error fetching more songs for playlist:', error);\r\n        }\r\n    };\r\n    \r\n\r\n    const handlePlaylistClick = (playlist) => {\r\n        if (playlist.id === 'liked-songs') {\r\n            fetchLikedSongs();\r\n        } else {\r\n            fetchPlaylistSongs(playlist);\r\n        }\r\n    };\r\n    const handleScroll = (event) => {\r\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\r\n    \r\n        if (scrollTop + clientHeight >= scrollHeight - 5) {\r\n            // If viewing Liked Songs, load more liked songs\r\n            if (selectedPlaylistName === '❤️ Liked Songs') {\r\n                loadMoreLikedSongs();\r\n            } else {\r\n                loadMorePlaylistSongs();\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ \r\n            height: '100vh', \r\n            width: '100vw',\r\n            position: 'relative',\r\n            overflow: 'hidden',\r\n            background: 'linear-gradient(135deg, #1db954 0%, #191414 100%)',\r\n            fontFamily: '\"Circular\", \"Helvetica Neue\", Arial, sans-serif'\r\n        }}>\r\n            {/* Main Dashboard */}\r\n            <div style={{\r\n                height: '100%',\r\n                padding: '30px',\r\n                transition: 'transform 0.3s ease-in-out',\r\n                transform: showSidebar ? 'translateX(-350px)' : 'translateX(0)',\r\n                overflowY: 'auto'\r\n            }}>\r\n                {/* Header */}\r\n                <div style={{\r\n                    marginBottom: '40px',\r\n                    textAlign: 'center'\r\n                }}>\r\n                    <h1 style={{\r\n                        color: 'white',\r\n                        fontSize: '3rem',\r\n                        fontWeight: 'bold',\r\n                        margin: '0 0 10px 0',\r\n                        textShadow: '0 2px 4px rgba(0,0,0,0.3)'\r\n                    }}>\r\n                        🎵 Spotify Dashboard\r\n                    </h1>\r\n                    <p style={{\r\n                        color: 'rgba(255,255,255,0.8)',\r\n                        fontSize: '1.1rem',\r\n                        margin: '0'\r\n                    }}>\r\n                        Discover and explore your music collection\r\n                    </p>\r\n                </div>\r\n\r\n                {/* Connection Status */}\r\n                {accessToken ? (\r\n                    <div style={{\r\n                        background: 'rgba(29, 185, 84, 0.2)',\r\n                        border: '2px solid #1db954',\r\n                        borderRadius: '12px',\r\n                        padding: '15px',\r\n                        marginBottom: '30px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <span style={{\r\n                            color: '#1db954',\r\n                            fontSize: '1.1rem',\r\n                            fontWeight: 'bold'\r\n                        }}>\r\n                            ✅ Connected to Spotify\r\n                        </span>\r\n                    </div>\r\n                ) : (\r\n                    <div style={{\r\n                        background: 'rgba(231, 76, 60, 0.2)',\r\n                        border: '2px solid #e74c3c',\r\n                        borderRadius: '12px',\r\n                        padding: '15px',\r\n                        marginBottom: '30px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <span style={{\r\n                            color: '#e74c3c',\r\n                            fontSize: '1.1rem',\r\n                            fontWeight: 'bold'\r\n                        }}>\r\n                            ❌ Not Connected to Spotify\r\n                        </span>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Playlists Grid */}\r\n                <div style={{\r\n                    marginBottom: '20px'\r\n                }}>\r\n                    <h2 style={{\r\n                        color: 'white',\r\n                        fontSize: '2rem',\r\n                        marginBottom: '25px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        Your Playlists\r\n                    </h2>\r\n                    \r\n                    <div style={{\r\n                        display: 'grid',\r\n                        gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',\r\n                        gap: '20px',\r\n                        maxWidth: '1200px',\r\n                        margin: '0 auto'\r\n                    }}>\r\n                        {playlists.map((playlist) => (\r\n                            <div\r\n                                key={playlist.id}\r\n                                onClick={() => handlePlaylistClick(playlist)}\r\n                                style={{\r\n                                    background: 'rgba(255, 255, 255, 0.1)',\r\n                                    backdropFilter: 'blur(10px)',\r\n                                    border: '1px solid rgba(255, 255, 255, 0.2)',\r\n                                    borderRadius: '16px',\r\n                                    padding: '20px',\r\n                                    cursor: 'pointer',\r\n                                    transition: 'all 0.3s ease',\r\n                                    textAlign: 'center',\r\n                                    position: 'relative',\r\n                                    overflow: 'hidden'\r\n                                }}\r\n                                onMouseEnter={(e) => {\r\n                                    e.target.style.transform = 'translateY(-5px)';\r\n                                    e.target.style.boxShadow = '0 10px 25px rgba(0,0,0,0.3)';\r\n                                    e.target.style.background = 'rgba(255, 255, 255, 0.15)';\r\n                                }}\r\n                                onMouseLeave={(e) => {\r\n                                    e.target.style.transform = 'translateY(0)';\r\n                                    e.target.style.boxShadow = 'none';\r\n                                    e.target.style.background = 'rgba(255, 255, 255, 0.1)';\r\n                                }}\r\n                            >\r\n                                <div style={{\r\n                                    fontSize: '2.5rem',\r\n                                    marginBottom: '10px'\r\n                                }}>\r\n                                    {playlist.id === 'liked-songs' ? '❤️' : '🎵'}\r\n                                </div>\r\n                                <h3 style={{\r\n                                    color: 'white',\r\n                                    fontSize: '1.2rem',\r\n                                    fontWeight: 'bold',\r\n                                    margin: '0 0 5px 0',\r\n                                    wordBreak: 'break-word'\r\n                                }}>\r\n                                    {playlist.name}\r\n                                </h3>\r\n                                <p style={{\r\n                                    color: 'rgba(255, 255, 255, 0.7)',\r\n                                    fontSize: '0.9rem',\r\n                                    margin: '0'\r\n                                }}>\r\n                                    Click to view tracks\r\n                                </p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Sliding Sidebar */}\r\n            <div style={{\r\n                position: 'fixed',\r\n                top: '0',\r\n                right: showSidebar ? '0' : '-400px',\r\n                width: '400px',\r\n                height: '100vh',\r\n                background: 'rgba(25, 20, 20, 0.95)',\r\n                backdropFilter: 'blur(15px)',\r\n                borderLeft: '1px solid rgba(255, 255, 255, 0.1)',\r\n                transition: 'right 0.3s ease-in-out',\r\n                zIndex: 1000,\r\n                display: 'flex',\r\n                flexDirection: 'column'\r\n            }}>\r\n                {/* Sidebar Header */}\r\n                <div style={{\r\n                    padding: '20px',\r\n                    borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\r\n                    background: 'rgba(29, 185, 84, 0.1)'\r\n                }}>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                        marginBottom: '10px'\r\n                    }}>\r\n                        <h2 style={{\r\n                            color: 'white',\r\n                            fontSize: '1.5rem',\r\n                            margin: '0',\r\n                            wordBreak: 'break-word'\r\n                        }}>\r\n                            {selectedPlaylistName}\r\n                        </h2>\r\n                        <button\r\n                            onClick={() => setShowSidebar(false)}\r\n                            style={{\r\n                                background: 'rgba(231, 76, 60, 0.2)',\r\n                                border: '1px solid #e74c3c',\r\n                                borderRadius: '8px',\r\n                                color: '#e74c3c',\r\n                                padding: '8px 12px',\r\n                                cursor: 'pointer',\r\n                                fontSize: '0.9rem',\r\n                                fontWeight: 'bold',\r\n                                transition: 'all 0.2s ease'\r\n                            }}\r\n                            onMouseEnter={(e) => {\r\n                                e.target.style.background = '#e74c3c';\r\n                                e.target.style.color = 'white';\r\n                            }}\r\n                            onMouseLeave={(e) => {\r\n                                e.target.style.background = 'rgba(231, 76, 60, 0.2)';\r\n                                e.target.style.color = '#e74c3c';\r\n                            }}\r\n                        >\r\n                            ✕ Close\r\n                        </button>\r\n                    </div>\r\n                    <p style={{\r\n                        color: 'rgba(255, 255, 255, 0.7)',\r\n                        fontSize: '0.9rem',\r\n                        margin: '0'\r\n                    }}>\r\n                        {likedSongs.length} tracks loaded\r\n                    </p>\r\n                </div>\r\n\r\n                {/* Songs List */}\r\n                <div\r\n                    style={{\r\n                        flex: 1,\r\n                        overflowY: 'auto',\r\n                        padding: '0'\r\n                    }}\r\n                    onScroll={handleScroll}\r\n                >\r\n                    {likedSongs.length > 0 ? (\r\n                        <div>\r\n                            {likedSongs.map((song, index) => (\r\n                                <div\r\n                                    key={song.track.id}\r\n                                    style={{\r\n                                        padding: '15px 20px',\r\n                                        borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\r\n                                        transition: 'background 0.2s ease',\r\n                                        cursor: 'pointer'\r\n                                    }}\r\n                                    onMouseEnter={(e) => {\r\n                                        e.target.style.background = 'rgba(255, 255, 255, 0.05)';\r\n                                    }}\r\n                                    onMouseLeave={(e) => {\r\n                                        e.target.style.background = 'transparent';\r\n                                    }}\r\n                                >\r\n                                    <div style={{\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        gap: '15px'\r\n                                    }}>\r\n                                        <div style={{\r\n                                            minWidth: '30px',\r\n                                            color: 'rgba(255, 255, 255, 0.5)',\r\n                                            fontSize: '0.9rem',\r\n                                            textAlign: 'center'\r\n                                        }}>\r\n                                            {index + 1}\r\n                                        </div>\r\n                                        <div style={{ flex: 1 }}>\r\n                                            <div style={{\r\n                                                color: 'white',\r\n                                                fontSize: '1rem',\r\n                                                fontWeight: '500',\r\n                                                marginBottom: '4px',\r\n                                                wordBreak: 'break-word'\r\n                                            }}>\r\n                                                {song.track.name}\r\n                                            </div>\r\n                                            <div style={{\r\n                                                color: 'rgba(255, 255, 255, 0.7)',\r\n                                                fontSize: '0.85rem',\r\n                                                wordBreak: 'break-word'\r\n                                            }}>\r\n                                                {song.track.artists.map(a => a.name).join(', ')}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <div style={{\r\n                            padding: '40px 20px',\r\n                            textAlign: 'center',\r\n                            color: 'rgba(255, 255, 255, 0.5)'\r\n                        }}>\r\n                            <div style={{ fontSize: '3rem', marginBottom: '20px' }}>🎵</div>\r\n                            <p>No tracks found</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Overlay when sidebar is open */}\r\n            {showSidebar && (\r\n                <div\r\n                    style={{\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: '100vw',\r\n                        height: '100vh',\r\n                        background: 'rgba(0, 0, 0, 0.3)',\r\n                        zIndex: 999\r\n                    }}\r\n                    onClick={() => setShowSidebar(false)}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}