{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\Spotify-Playlist-Generator\\\\frontend\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const navigate = useNavigate();\n  const [accessToken, setAccessToken] = useState('');\n  const [refreshToken, setRefreshToken] = useState('');\n  const [playlists, setPlaylists] = useState([]);\n  const [likedSongs, setLikedSongs] = useState([]);\n  const [showSidebar, setShowSidebar] = useState(false);\n  const [selectedPlaylistName, setSelectedPlaylistName] = useState('');\n  const [nextLikedSongsUrl, setNextLikedSongsUrl] = useState('');\n  const [nextPlaylistSongsUrl, setNextPlaylistSongsUrl] = useState('');\n\n  // Function to refresh access token\n  const refreshAccessToken = async () => {\n    if (!refreshToken) {\n      console.error('No refresh token available');\n      handleLogout();\n      return null;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/refresh', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          refresh_token: refreshToken\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to refresh token');\n      }\n      const data = await response.json();\n      const newAccessToken = data.access_token;\n\n      // Update tokens\n      setAccessToken(newAccessToken);\n      localStorage.setItem('spotify_access_token', newAccessToken);\n      console.log('✅ Token refreshed successfully');\n      return newAccessToken;\n    } catch (error) {\n      console.error('❌ Error refreshing token:', error);\n      handleLogout(); // Force re-login if refresh fails\n      return null;\n    }\n  };\n\n  // Enhanced fetch function with automatic token refresh\n  const spotifyFetch = async (url, options = {}) => {\n    let token = accessToken;\n\n    // First attempt with current token\n    let response = await fetch(url, {\n      ...options,\n      headers: {\n        Authorization: `Bearer ${token}`,\n        ...options.headers\n      }\n    });\n\n    // If token expired, refresh and retry\n    if (response.status === 401) {\n      console.log('🔄 Token expired, refreshing...');\n      token = await refreshAccessToken();\n      if (!token) {\n        throw new Error('Unable to refresh token');\n      }\n\n      // Retry with new token\n      response = await fetch(url, {\n        ...options,\n        headers: {\n          Authorization: `Bearer ${token}`,\n          ...options.headers\n        }\n      });\n    }\n    return response;\n  };\n\n  // Extract tokens from URL or LocalStorage\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const access_token = params.get('access_token') || localStorage.getItem('spotify_access_token');\n    const refresh_token = params.get('refresh_token') || localStorage.getItem('spotify_refresh_token');\n    if (access_token && refresh_token) {\n      setAccessToken(access_token);\n      setRefreshToken(refresh_token);\n\n      // Save tokens for future use\n      localStorage.setItem('spotify_access_token', access_token);\n      localStorage.setItem('spotify_refresh_token', refresh_token);\n\n      // Clean URL after extracting tokens\n      if (params.get('access_token')) {\n        window.history.replaceState({}, document.title, window.location.pathname);\n      }\n    }\n  }, []);\n\n  // Fetch playlists with token refresh\n  useEffect(() => {\n    if (!accessToken || !refreshToken) return;\n    const fetchPlaylists = async () => {\n      try {\n        const response = await spotifyFetch('https://api.spotify.com/v1/me/playlists');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n\n        // Add \"Liked Songs\" as the first fake playlist\n        const likedSongsPlaceholder = {\n          id: 'liked-songs',\n          name: '❤️ Liked Songs'\n        };\n        const allPlaylists = [likedSongsPlaceholder, ...(data.items || [])];\n        setPlaylists(allPlaylists);\n      } catch (error) {\n        console.error('Error fetching playlists:', error);\n      }\n    };\n    fetchPlaylists();\n  }, [accessToken, refreshToken]);\n\n  // Fetch all liked songs (with pagination) - Updated with token refresh\n  const fetchLikedSongs = async () => {\n    setSelectedPlaylistName('❤️ Liked Songs');\n    setShowSidebar(true);\n    setLikedSongs([]); // Clear any old songs\n\n    try {\n      const response = await spotifyFetch('https://api.spotify.com/v1/me/tracks');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setLikedSongs(data.items); // Show the first 50 songs\n      setNextLikedSongsUrl(data.next); // Save the next page URL for later\n    } catch (error) {\n      console.error('Error fetching liked songs:', error);\n      alert('Failed to fetch liked songs. Please try again.');\n    }\n  };\n  const loadMoreLikedSongs = async () => {\n    if (!nextLikedSongsUrl) return; // No more pages\n\n    try {\n      const response = await spotifyFetch(nextLikedSongsUrl);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setLikedSongs(prevSongs => [...prevSongs, ...data.items]); // Add new songs to list\n      setNextLikedSongsUrl(data.next); // Update next page URL (or null if no more)\n    } catch (error) {\n      console.error('Error fetching more liked songs:', error);\n      alert('Failed to load more liked songs. Please try again.');\n    }\n  };\n  const fetchPlaylistSongs = async playlist => {\n    setSelectedPlaylistName(playlist.name); // Playlist has an id and a name\n    setShowSidebar(true); // this is what we use to show the sidebar, can change to a generic name that works for both palylists and likedsongs\n    setLikedSongs([]); // Same as above, list of songs that will be showing, we are clearing it\n    setNextPlaylistSongsUrl(''); // Clear any old next URL\n\n    try {\n      const firstPageUrl = `https://api.spotify.com/v1/playlists/${playlist.id}/tracks`;\n      const response = await spotifyFetch(firstPageUrl);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setLikedSongs(data.items);\n      setNextPlaylistSongsUrl(data.next);\n    } catch (error) {\n      console.error('Error fetching playlist songs:', error);\n      alert('Failed to fetch playlist songs. Please try again.');\n    }\n  };\n  const loadMorePlaylistSongs = async () => {\n    if (!nextPlaylistSongsUrl) return;\n    try {\n      const response = await spotifyFetch(nextPlaylistSongsUrl);\n      const data = await response.json();\n      setLikedSongs(prevSongs => [...prevSongs, ...data.items]); // Append new songs\n      setNextPlaylistSongsUrl(data.next); // Update next page URL\n    } catch (error) {\n      console.error('Error fetching more songs for playlist:', error);\n    }\n  };\n  const handlePlaylistClick = playlist => {\n    if (playlist.id === 'liked-songs') {\n      fetchLikedSongs();\n    } else {\n      fetchPlaylistSongs(playlist);\n    }\n  };\n  const handleScroll = event => {\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight\n    } = event.target;\n    if (scrollTop + clientHeight >= scrollHeight - 5) {\n      // If viewing Liked Songs, load more liked songs\n      if (selectedPlaylistName === '❤️ Liked Songs') {\n        loadMoreLikedSongs();\n      } else {\n        loadMorePlaylistSongs();\n      }\n    }\n  };\n\n  // Add logout function\n  const handleLogout = () => {\n    // Clear tokens from state\n    setAccessToken('');\n    setRefreshToken('');\n\n    // Clear tokens from localStorage\n    localStorage.removeItem('spotify_access_token');\n    localStorage.removeItem('spotify_refresh_token');\n\n    // Clear other state\n    setPlaylists([]);\n    setLikedSongs([]);\n    setShowSidebar(false);\n    setSelectedPlaylistName('');\n    setNextLikedSongsUrl('');\n    setNextPlaylistSongsUrl('');\n\n    // Redirect to home page\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100vw',\n      position: 'relative',\n      overflow: 'hidden',\n      background: 'linear-gradient(135deg, #1db954 0%, #191414 100%)',\n      fontFamily: '\"Circular\", \"Helvetica Neue\", Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100%',\n        padding: '30px',\n        transition: 'transform 0.3s ease-in-out',\n        transform: showSidebar ? 'translateX(-350px)' : 'translateX(0)',\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'flex-start',\n          marginBottom: '40px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: 'white',\n              fontSize: '3rem',\n              fontWeight: 'bold',\n              margin: '0 0 10px 0',\n              textShadow: '0 2px 4px rgba(0,0,0,0.3)'\n            },\n            children: \"\\uD83C\\uDFB5 Spotify Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'rgba(255,255,255,0.8)',\n              fontSize: '1.1rem',\n              margin: '0'\n            },\n            children: \"Discover and explore your music collection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this), accessToken && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          style: {\n            background: 'rgba(231, 76, 60, 0.2)',\n            border: '2px solid #e74c3c',\n            borderRadius: '12px',\n            color: '#e74c3c',\n            padding: '12px 20px',\n            cursor: 'pointer',\n            fontSize: '1rem',\n            fontWeight: 'bold',\n            transition: 'all 0.3s ease',\n            backdropFilter: 'blur(10px)',\n            flexShrink: 0\n          },\n          onMouseEnter: e => {\n            e.target.style.background = '#e74c3c';\n            e.target.style.color = 'white';\n            e.target.style.transform = 'translateY(-2px)';\n            e.target.style.boxShadow = '0 5px 15px rgba(231, 76, 60, 0.4)';\n          },\n          onMouseLeave: e => {\n            e.target.style.background = 'rgba(231, 76, 60, 0.2)';\n            e.target.style.color = '#e74c3c';\n            e.target.style.transform = 'translateY(0)';\n            e.target.style.boxShadow = 'none';\n          },\n          children: \"\\uD83D\\uDEAA Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this), accessToken ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'rgba(29, 185, 84, 0.2)',\n          border: '2px solid #1db954',\n          borderRadius: '12px',\n          padding: '15px',\n          marginBottom: '30px',\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#1db954',\n            fontSize: '1.1rem',\n            fontWeight: 'bold'\n          },\n          children: \"\\u2705 Connected to Spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'rgba(231, 76, 60, 0.2)',\n          border: '2px solid #e74c3c',\n          borderRadius: '12px',\n          padding: '15px',\n          marginBottom: '30px',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#e74c3c',\n            fontSize: '1.1rem',\n            fontWeight: 'bold'\n          },\n          children: \"\\u274C Not Connected to Spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate('/'),\n            style: {\n              background: 'rgba(29, 185, 84, 0.2)',\n              border: '2px solid #1db954',\n              borderRadius: '8px',\n              color: '#1db954',\n              padding: '8px 16px',\n              cursor: 'pointer',\n              fontSize: '0.9rem',\n              fontWeight: 'bold',\n              transition: 'all 0.2s ease'\n            },\n            onMouseEnter: e => {\n              e.target.style.background = '#1db954';\n              e.target.style.color = 'white';\n            },\n            onMouseLeave: e => {\n              e.target.style.background = 'rgba(29, 185, 84, 0.2)';\n              e.target.style.color = '#1db954';\n            },\n            children: \"Go to Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: 'white',\n            fontSize: '2rem',\n            marginBottom: '25px',\n            textAlign: 'center'\n          },\n          children: \"Your Playlists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',\n            gap: '20px',\n            maxWidth: '1200px',\n            margin: '0 auto'\n          },\n          children: playlists.map(playlist => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handlePlaylistClick(playlist),\n            style: {\n              background: 'rgba(255, 255, 255, 0.1)',\n              backdropFilter: 'blur(10px)',\n              border: '1px solid rgba(255, 255, 255, 0.2)',\n              borderRadius: '16px',\n              padding: '20px',\n              cursor: 'pointer',\n              transition: 'all 0.3s ease',\n              textAlign: 'center',\n              position: 'relative',\n              overflow: 'hidden'\n            },\n            onMouseEnter: e => {\n              e.target.style.transform = 'translateY(-5px)';\n              e.target.style.boxShadow = '0 10px 25px rgba(0,0,0,0.3)';\n              e.target.style.background = 'rgba(255, 255, 255, 0.15)';\n            },\n            onMouseLeave: e => {\n              e.target.style.transform = 'translateY(0)';\n              e.target.style.boxShadow = 'none';\n              e.target.style.background = 'rgba(255, 255, 255, 0.1)';\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '2.5rem',\n                marginBottom: '10px'\n              },\n              children: playlist.id === 'liked-songs' ? '❤️' : '🎵'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                color: 'white',\n                fontSize: '1.2rem',\n                fontWeight: 'bold',\n                margin: '0 0 5px 0',\n                wordBreak: 'break-word'\n              },\n              children: playlist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'rgba(255, 255, 255, 0.7)',\n                fontSize: '0.9rem',\n                margin: '0'\n              },\n              children: \"Click to view tracks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 33\n            }, this)]\n          }, playlist.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '0',\n        right: showSidebar ? '0' : '-400px',\n        width: '400px',\n        height: '100vh',\n        background: 'rgba(25, 20, 20, 0.95)',\n        backdropFilter: 'blur(15px)',\n        borderLeft: '1px solid rgba(255, 255, 255, 0.1)',\n        transition: 'right 0.3s ease-in-out',\n        zIndex: 1000,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '20px',\n          borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n          background: 'rgba(29, 185, 84, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: 'white',\n              fontSize: '1.5rem',\n              margin: '0',\n              wordBreak: 'break-word'\n            },\n            children: selectedPlaylistName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowSidebar(false),\n            style: {\n              background: 'rgba(231, 76, 60, 0.2)',\n              border: '1px solid #e74c3c',\n              borderRadius: '8px',\n              color: '#e74c3c',\n              padding: '8px 12px',\n              cursor: 'pointer',\n              fontSize: '0.9rem',\n              fontWeight: 'bold',\n              transition: 'all 0.2s ease'\n            },\n            onMouseEnter: e => {\n              e.target.style.background = '#e74c3c';\n              e.target.style.color = 'white';\n            },\n            onMouseLeave: e => {\n              e.target.style.background = 'rgba(231, 76, 60, 0.2)';\n              e.target.style.color = '#e74c3c';\n            },\n            children: \"\\u2715 Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'rgba(255, 255, 255, 0.7)',\n            fontSize: '0.9rem',\n            margin: '0'\n          },\n          children: [likedSongs.length, \" tracks loaded\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '0'\n        },\n        onScroll: handleScroll,\n        children: likedSongs.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: likedSongs.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '15px 20px',\n              borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n              transition: 'background 0.2s ease',\n              cursor: 'pointer'\n            },\n            onMouseEnter: e => {\n              e.target.style.background = 'rgba(255, 255, 255, 0.05)';\n            },\n            onMouseLeave: e => {\n              e.target.style.background = 'transparent';\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: '15px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  minWidth: '30px',\n                  color: 'rgba(255, 255, 255, 0.5)',\n                  fontSize: '0.9rem',\n                  textAlign: 'center'\n                },\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  flex: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: 'white',\n                    fontSize: '1rem',\n                    fontWeight: '500',\n                    marginBottom: '4px',\n                    wordBreak: 'break-word'\n                  },\n                  children: song.track.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: 'rgba(255, 255, 255, 0.7)',\n                    fontSize: '0.85rem',\n                    wordBreak: 'break-word'\n                  },\n                  children: song.track.artists.map(a => a.name).join(', ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 37\n            }, this)\n          }, song.track.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '40px 20px',\n            textAlign: 'center',\n            color: 'rgba(255, 255, 255, 0.5)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '3rem',\n              marginBottom: '20px'\n            },\n            children: \"\\uD83C\\uDFB5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No tracks found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 13\n    }, this), showSidebar && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        background: 'rgba(0, 0, 0, 0.3)',\n        zIndex: 999\n      },\n      onClick: () => setShowSidebar(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"qTvSEWaoHF4Gm0gQOc15ZADYS/g=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","navigate","accessToken","setAccessToken","refreshToken","setRefreshToken","playlists","setPlaylists","likedSongs","setLikedSongs","showSidebar","setShowSidebar","selectedPlaylistName","setSelectedPlaylistName","nextLikedSongsUrl","setNextLikedSongsUrl","nextPlaylistSongsUrl","setNextPlaylistSongsUrl","refreshAccessToken","console","error","handleLogout","response","fetch","method","headers","body","JSON","stringify","refresh_token","ok","Error","data","json","newAccessToken","access_token","localStorage","setItem","log","spotifyFetch","url","options","token","Authorization","status","params","URLSearchParams","window","location","search","get","getItem","history","replaceState","document","title","pathname","fetchPlaylists","likedSongsPlaceholder","id","name","allPlaylists","items","fetchLikedSongs","next","alert","loadMoreLikedSongs","prevSongs","fetchPlaylistSongs","playlist","firstPageUrl","loadMorePlaylistSongs","handlePlaylistClick","handleScroll","event","scrollTop","scrollHeight","clientHeight","target","removeItem","style","height","width","position","overflow","background","fontFamily","children","padding","transition","transform","overflowY","display","justifyContent","alignItems","marginBottom","flex","textAlign","color","fontSize","fontWeight","margin","textShadow","fileName","_jsxFileName","lineNumber","columnNumber","onClick","border","borderRadius","cursor","backdropFilter","flexShrink","onMouseEnter","e","boxShadow","onMouseLeave","marginTop","gridTemplateColumns","gap","maxWidth","map","wordBreak","top","right","borderLeft","zIndex","flexDirection","borderBottom","length","onScroll","song","index","minWidth","track","artists","a","join","left","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Desktop/Spotify-Playlist-Generator/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Dashboard() {\r\n    const navigate = useNavigate();\r\n    const [accessToken, setAccessToken] = useState('');\r\n    const [refreshToken, setRefreshToken] = useState('');\r\n    const [playlists, setPlaylists] = useState([]);\r\n    const [likedSongs, setLikedSongs] = useState([]);\r\n    const [showSidebar, setShowSidebar] = useState(false);\r\n    const [selectedPlaylistName, setSelectedPlaylistName] = useState('');\r\n    const [nextLikedSongsUrl, setNextLikedSongsUrl] = useState('');\r\n    const [nextPlaylistSongsUrl, setNextPlaylistSongsUrl] = useState('');\r\n\r\n    // Function to refresh access token\r\n    const refreshAccessToken = async () => {\r\n        if (!refreshToken) {\r\n            console.error('No refresh token available');\r\n            handleLogout();\r\n            return null;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/refresh', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ refresh_token: refreshToken })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to refresh token');\r\n            }\r\n\r\n            const data = await response.json();\r\n            const newAccessToken = data.access_token;\r\n\r\n            // Update tokens\r\n            setAccessToken(newAccessToken);\r\n            localStorage.setItem('spotify_access_token', newAccessToken);\r\n\r\n            console.log('✅ Token refreshed successfully');\r\n            return newAccessToken;\r\n\r\n        } catch (error) {\r\n            console.error('❌ Error refreshing token:', error);\r\n            handleLogout(); // Force re-login if refresh fails\r\n            return null;\r\n        }\r\n    };\r\n\r\n    // Enhanced fetch function with automatic token refresh\r\n    const spotifyFetch = async (url, options = {}) => {\r\n        let token = accessToken;\r\n\r\n        // First attempt with current token\r\n        let response = await fetch(url, {\r\n            ...options,\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                ...options.headers\r\n            }\r\n        });\r\n\r\n        // If token expired, refresh and retry\r\n        if (response.status === 401) {\r\n            console.log('🔄 Token expired, refreshing...');\r\n            token = await refreshAccessToken();\r\n            \r\n            if (!token) {\r\n                throw new Error('Unable to refresh token');\r\n            }\r\n\r\n            // Retry with new token\r\n            response = await fetch(url, {\r\n                ...options,\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    ...options.headers\r\n                }\r\n            });\r\n        }\r\n\r\n        return response;\r\n    };\r\n\r\n    // Extract tokens from URL or LocalStorage\r\n    useEffect(() => {\r\n        const params = new URLSearchParams(window.location.search);\r\n        const access_token = params.get('access_token') || localStorage.getItem('spotify_access_token');\r\n        const refresh_token = params.get('refresh_token') || localStorage.getItem('spotify_refresh_token');\r\n\r\n        if (access_token && refresh_token) {\r\n            setAccessToken(access_token);\r\n            setRefreshToken(refresh_token);\r\n\r\n            // Save tokens for future use\r\n            localStorage.setItem('spotify_access_token', access_token);\r\n            localStorage.setItem('spotify_refresh_token', refresh_token);\r\n\r\n            // Clean URL after extracting tokens\r\n            if (params.get('access_token')) {\r\n                window.history.replaceState({}, document.title, window.location.pathname);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    // Fetch playlists with token refresh\r\n    useEffect(() => {\r\n        if (!accessToken || !refreshToken) return;\r\n\r\n        const fetchPlaylists = async () => {\r\n            try {\r\n                const response = await spotifyFetch('https://api.spotify.com/v1/me/playlists');\r\n                \r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                \r\n                const data = await response.json();\r\n\r\n                // Add \"Liked Songs\" as the first fake playlist\r\n                const likedSongsPlaceholder = { id: 'liked-songs', name: '❤️ Liked Songs' };\r\n                const allPlaylists = [likedSongsPlaceholder, ...(data.items || [])];\r\n\r\n                setPlaylists(allPlaylists);\r\n            } catch (error) {\r\n                console.error('Error fetching playlists:', error);\r\n            }\r\n        };\r\n\r\n        fetchPlaylists();\r\n    }, [accessToken, refreshToken]);\r\n\r\n    // Fetch all liked songs (with pagination) - Updated with token refresh\r\n    const fetchLikedSongs = async () => {\r\n        setSelectedPlaylistName('❤️ Liked Songs');\r\n        setShowSidebar(true);\r\n        setLikedSongs([]);   // Clear any old songs\r\n    \r\n        try {\r\n            const response = await spotifyFetch('https://api.spotify.com/v1/me/tracks');\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n    \r\n            const data = await response.json();\r\n    \r\n            setLikedSongs(data.items);  // Show the first 50 songs\r\n            setNextLikedSongsUrl(data.next);  // Save the next page URL for later\r\n        } catch (error) {\r\n            console.error('Error fetching liked songs:', error);\r\n            alert('Failed to fetch liked songs. Please try again.');\r\n        }\r\n    };\r\n\r\n    const loadMoreLikedSongs = async () => {\r\n        if (!nextLikedSongsUrl) return;  // No more pages\r\n    \r\n        try {\r\n            const response = await spotifyFetch(nextLikedSongsUrl);\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n    \r\n            const data = await response.json();\r\n    \r\n            setLikedSongs((prevSongs) => [...prevSongs, ...data.items]);  // Add new songs to list\r\n            setNextLikedSongsUrl(data.next);  // Update next page URL (or null if no more)\r\n        } catch (error) {\r\n            console.error('Error fetching more liked songs:', error);\r\n            alert('Failed to load more liked songs. Please try again.');\r\n        }\r\n    };\r\n\r\n    const fetchPlaylistSongs = async(playlist) => {\r\n        setSelectedPlaylistName(playlist.name); // Playlist has an id and a name\r\n        setShowSidebar(true); // this is what we use to show the sidebar, can change to a generic name that works for both palylists and likedsongs\r\n        setLikedSongs([]);  // Same as above, list of songs that will be showing, we are clearing it\r\n        setNextPlaylistSongsUrl('');  // Clear any old next URL\r\n        \r\n        try {\r\n            const firstPageUrl = `https://api.spotify.com/v1/playlists/${playlist.id}/tracks`;\r\n\r\n            const response = await spotifyFetch(firstPageUrl);\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            setLikedSongs(data.items);\r\n            setNextPlaylistSongsUrl(data.next);\r\n        } catch (error) {\r\n            console.error('Error fetching playlist songs:', error);\r\n            alert('Failed to fetch playlist songs. Please try again.');\r\n        }\r\n    }\r\n\r\n    const loadMorePlaylistSongs = async () => {\r\n        if (!nextPlaylistSongsUrl) return;\r\n    \r\n        try {\r\n            const response = await spotifyFetch(nextPlaylistSongsUrl);\r\n    \r\n            const data = await response.json();\r\n    \r\n            setLikedSongs((prevSongs) => [...prevSongs, ...data.items]); // Append new songs\r\n            setNextPlaylistSongsUrl(data.next); // Update next page URL\r\n        } catch (error) {\r\n            console.error('Error fetching more songs for playlist:', error);\r\n        }\r\n    };\r\n\r\n    const handlePlaylistClick = (playlist) => {\r\n        if (playlist.id === 'liked-songs') {\r\n            fetchLikedSongs();\r\n        } else {\r\n            fetchPlaylistSongs(playlist);\r\n        }\r\n    };\r\n\r\n    const handleScroll = (event) => {\r\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\r\n    \r\n        if (scrollTop + clientHeight >= scrollHeight - 5) {\r\n            // If viewing Liked Songs, load more liked songs\r\n            if (selectedPlaylistName === '❤️ Liked Songs') {\r\n                loadMoreLikedSongs();\r\n            } else {\r\n                loadMorePlaylistSongs();\r\n            }\r\n        }\r\n    };\r\n\r\n    // Add logout function\r\n    const handleLogout = () => {\r\n        // Clear tokens from state\r\n        setAccessToken('');\r\n        setRefreshToken('');\r\n        \r\n        // Clear tokens from localStorage\r\n        localStorage.removeItem('spotify_access_token');\r\n        localStorage.removeItem('spotify_refresh_token');\r\n        \r\n        // Clear other state\r\n        setPlaylists([]);\r\n        setLikedSongs([]);\r\n        setShowSidebar(false);\r\n        setSelectedPlaylistName('');\r\n        setNextLikedSongsUrl('');\r\n        setNextPlaylistSongsUrl('');\r\n        \r\n        // Redirect to home page\r\n        navigate('/');\r\n    };\r\n\r\n    return (\r\n        <div style={{ \r\n            height: '100vh', \r\n            width: '100vw',\r\n            position: 'relative',\r\n            overflow: 'hidden',\r\n            background: 'linear-gradient(135deg, #1db954 0%, #191414 100%)',\r\n            fontFamily: '\"Circular\", \"Helvetica Neue\", Arial, sans-serif'\r\n        }}>\r\n            {/* Main Dashboard */}\r\n            <div style={{\r\n                height: '100%',\r\n                padding: '30px',\r\n                transition: 'transform 0.3s ease-in-out',\r\n                transform: showSidebar ? 'translateX(-350px)' : 'translateX(0)',\r\n                overflowY: 'auto'\r\n            }}>\r\n                {/* Header with Logout Button */}\r\n                <div style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'flex-start',\r\n                    marginBottom: '40px'\r\n                }}>\r\n                    <div style={{ flex: 1, textAlign: 'center' }}>\r\n                        <h1 style={{\r\n                            color: 'white',\r\n                            fontSize: '3rem',\r\n                            fontWeight: 'bold',\r\n                            margin: '0 0 10px 0',\r\n                            textShadow: '0 2px 4px rgba(0,0,0,0.3)'\r\n                        }}>\r\n                            🎵 Spotify Dashboard\r\n                        </h1>\r\n                        <p style={{\r\n                            color: 'rgba(255,255,255,0.8)',\r\n                            fontSize: '1.1rem',\r\n                            margin: '0'\r\n                        }}>\r\n                            Discover and explore your music collection\r\n                        </p>\r\n                    </div>\r\n                    \r\n                    {/* Logout Button */}\r\n                    {accessToken && (\r\n                        <button\r\n                            onClick={handleLogout}\r\n                            style={{\r\n                                background: 'rgba(231, 76, 60, 0.2)',\r\n                                border: '2px solid #e74c3c',\r\n                                borderRadius: '12px',\r\n                                color: '#e74c3c',\r\n                                padding: '12px 20px',\r\n                                cursor: 'pointer',\r\n                                fontSize: '1rem',\r\n                                fontWeight: 'bold',\r\n                                transition: 'all 0.3s ease',\r\n                                backdropFilter: 'blur(10px)',\r\n                                flexShrink: 0\r\n                            }}\r\n                            onMouseEnter={(e) => {\r\n                                e.target.style.background = '#e74c3c';\r\n                                e.target.style.color = 'white';\r\n                                e.target.style.transform = 'translateY(-2px)';\r\n                                e.target.style.boxShadow = '0 5px 15px rgba(231, 76, 60, 0.4)';\r\n                            }}\r\n                            onMouseLeave={(e) => {\r\n                                e.target.style.background = 'rgba(231, 76, 60, 0.2)';\r\n                                e.target.style.color = '#e74c3c';\r\n                                e.target.style.transform = 'translateY(0)';\r\n                                e.target.style.boxShadow = 'none';\r\n                            }}\r\n                        >\r\n                            🚪 Logout\r\n                        </button>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Connection Status */}\r\n                {accessToken ? (\r\n                    <div style={{\r\n                        background: 'rgba(29, 185, 84, 0.2)',\r\n                        border: '2px solid #1db954',\r\n                        borderRadius: '12px',\r\n                        padding: '15px',\r\n                        marginBottom: '30px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <span style={{\r\n                            color: '#1db954',\r\n                            fontSize: '1.1rem',\r\n                            fontWeight: 'bold'\r\n                        }}>\r\n                            ✅ Connected to Spotify\r\n                        </span>\r\n                    </div>\r\n                ) : (\r\n                    <div style={{\r\n                        background: 'rgba(231, 76, 60, 0.2)',\r\n                        border: '2px solid #e74c3c',\r\n                        borderRadius: '12px',\r\n                        padding: '15px',\r\n                        marginBottom: '30px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <span style={{\r\n                            color: '#e74c3c',\r\n                            fontSize: '1.1rem',\r\n                            fontWeight: 'bold'\r\n                        }}>\r\n                            ❌ Not Connected to Spotify\r\n                        </span>\r\n                        <div style={{ marginTop: '10px' }}>\r\n                            <button\r\n                                onClick={() => navigate('/')}\r\n                                style={{\r\n                                    background: 'rgba(29, 185, 84, 0.2)',\r\n                                    border: '2px solid #1db954',\r\n                                    borderRadius: '8px',\r\n                                    color: '#1db954',\r\n                                    padding: '8px 16px',\r\n                                    cursor: 'pointer',\r\n                                    fontSize: '0.9rem',\r\n                                    fontWeight: 'bold',\r\n                                    transition: 'all 0.2s ease'\r\n                                }}\r\n                                onMouseEnter={(e) => {\r\n                                    e.target.style.background = '#1db954';\r\n                                    e.target.style.color = 'white';\r\n                                }}\r\n                                onMouseLeave={(e) => {\r\n                                    e.target.style.background = 'rgba(29, 185, 84, 0.2)';\r\n                                    e.target.style.color = '#1db954';\r\n                                }}\r\n                            >\r\n                                Go to Login\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Playlists Grid */}\r\n                <div style={{\r\n                    marginBottom: '20px'\r\n                }}>\r\n                    <h2 style={{\r\n                        color: 'white',\r\n                        fontSize: '2rem',\r\n                        marginBottom: '25px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        Your Playlists\r\n                    </h2>\r\n                    \r\n                    <div style={{\r\n                        display: 'grid',\r\n                        gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',\r\n                        gap: '20px',\r\n                        maxWidth: '1200px',\r\n                        margin: '0 auto'\r\n                    }}>\r\n                        {playlists.map((playlist) => (\r\n                            <div\r\n                                key={playlist.id}\r\n                                onClick={() => handlePlaylistClick(playlist)}\r\n                                style={{\r\n                                    background: 'rgba(255, 255, 255, 0.1)',\r\n                                    backdropFilter: 'blur(10px)',\r\n                                    border: '1px solid rgba(255, 255, 255, 0.2)',\r\n                                    borderRadius: '16px',\r\n                                    padding: '20px',\r\n                                    cursor: 'pointer',\r\n                                    transition: 'all 0.3s ease',\r\n                                    textAlign: 'center',\r\n                                    position: 'relative',\r\n                                    overflow: 'hidden'\r\n                                }}\r\n                                onMouseEnter={(e) => {\r\n                                    e.target.style.transform = 'translateY(-5px)';\r\n                                    e.target.style.boxShadow = '0 10px 25px rgba(0,0,0,0.3)';\r\n                                    e.target.style.background = 'rgba(255, 255, 255, 0.15)';\r\n                                }}\r\n                                onMouseLeave={(e) => {\r\n                                    e.target.style.transform = 'translateY(0)';\r\n                                    e.target.style.boxShadow = 'none';\r\n                                    e.target.style.background = 'rgba(255, 255, 255, 0.1)';\r\n                                }}\r\n                            >\r\n                                <div style={{\r\n                                    fontSize: '2.5rem',\r\n                                    marginBottom: '10px'\r\n                                }}>\r\n                                    {playlist.id === 'liked-songs' ? '❤️' : '🎵'}\r\n                                </div>\r\n                                <h3 style={{\r\n                                    color: 'white',\r\n                                    fontSize: '1.2rem',\r\n                                    fontWeight: 'bold',\r\n                                    margin: '0 0 5px 0',\r\n                                    wordBreak: 'break-word'\r\n                                }}>\r\n                                    {playlist.name}\r\n                                </h3>\r\n                                <p style={{\r\n                                    color: 'rgba(255, 255, 255, 0.7)',\r\n                                    fontSize: '0.9rem',\r\n                                    margin: '0'\r\n                                }}>\r\n                                    Click to view tracks\r\n                                </p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Sliding Sidebar */}\r\n            <div style={{\r\n                position: 'fixed',\r\n                top: '0',\r\n                right: showSidebar ? '0' : '-400px',\r\n                width: '400px',\r\n                height: '100vh',\r\n                background: 'rgba(25, 20, 20, 0.95)',\r\n                backdropFilter: 'blur(15px)',\r\n                borderLeft: '1px solid rgba(255, 255, 255, 0.1)',\r\n                transition: 'right 0.3s ease-in-out',\r\n                zIndex: 1000,\r\n                display: 'flex',\r\n                flexDirection: 'column'\r\n            }}>\r\n                {/* Sidebar Header */}\r\n                <div style={{\r\n                    padding: '20px',\r\n                    borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\r\n                    background: 'rgba(29, 185, 84, 0.1)'\r\n                }}>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                        marginBottom: '10px'\r\n                    }}>\r\n                        <h2 style={{\r\n                            color: 'white',\r\n                            fontSize: '1.5rem',\r\n                            margin: '0',\r\n                            wordBreak: 'break-word'\r\n                        }}>\r\n                            {selectedPlaylistName}\r\n                        </h2>\r\n                        <button\r\n                            onClick={() => setShowSidebar(false)}\r\n                            style={{\r\n                                background: 'rgba(231, 76, 60, 0.2)',\r\n                                border: '1px solid #e74c3c',\r\n                                borderRadius: '8px',\r\n                                color: '#e74c3c',\r\n                                padding: '8px 12px',\r\n                                cursor: 'pointer',\r\n                                fontSize: '0.9rem',\r\n                                fontWeight: 'bold',\r\n                                transition: 'all 0.2s ease'\r\n                            }}\r\n                            onMouseEnter={(e) => {\r\n                                e.target.style.background = '#e74c3c';\r\n                                e.target.style.color = 'white';\r\n                            }}\r\n                            onMouseLeave={(e) => {\r\n                                e.target.style.background = 'rgba(231, 76, 60, 0.2)';\r\n                                e.target.style.color = '#e74c3c';\r\n                            }}\r\n                        >\r\n                            ✕ Close\r\n                        </button>\r\n                    </div>\r\n                    <p style={{\r\n                        color: 'rgba(255, 255, 255, 0.7)',\r\n                        fontSize: '0.9rem',\r\n                        margin: '0'\r\n                    }}>\r\n                        {likedSongs.length} tracks loaded\r\n                    </p>\r\n                </div>\r\n\r\n                {/* Songs List */}\r\n                <div\r\n                    style={{\r\n                        flex: 1,\r\n                        overflowY: 'auto',\r\n                        padding: '0'\r\n                    }}\r\n                    onScroll={handleScroll}\r\n                >\r\n                    {likedSongs.length > 0 ? (\r\n                        <div>\r\n                            {likedSongs.map((song, index) => (\r\n                                <div\r\n                                    key={song.track.id}\r\n                                    style={{\r\n                                        padding: '15px 20px',\r\n                                        borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\r\n                                        transition: 'background 0.2s ease',\r\n                                        cursor: 'pointer'\r\n                                    }}\r\n                                    onMouseEnter={(e) => {\r\n                                        e.target.style.background = 'rgba(255, 255, 255, 0.05)';\r\n                                    }}\r\n                                    onMouseLeave={(e) => {\r\n                                        e.target.style.background = 'transparent';\r\n                                    }}\r\n                                >\r\n                                    <div style={{\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        gap: '15px'\r\n                                    }}>\r\n                                        <div style={{\r\n                                            minWidth: '30px',\r\n                                            color: 'rgba(255, 255, 255, 0.5)',\r\n                                            fontSize: '0.9rem',\r\n                                            textAlign: 'center'\r\n                                        }}>\r\n                                            {index + 1}\r\n                                        </div>\r\n                                        <div style={{ flex: 1 }}>\r\n                                            <div style={{\r\n                                                color: 'white',\r\n                                                fontSize: '1rem',\r\n                                                fontWeight: '500',\r\n                                                marginBottom: '4px',\r\n                                                wordBreak: 'break-word'\r\n                                            }}>\r\n                                                {song.track.name}\r\n                                            </div>\r\n                                            <div style={{\r\n                                                color: 'rgba(255, 255, 255, 0.7)',\r\n                                                fontSize: '0.85rem',\r\n                                                wordBreak: 'break-word'\r\n                                            }}>\r\n                                                {song.track.artists.map(a => a.name).join(', ')}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <div style={{\r\n                            padding: '40px 20px',\r\n                            textAlign: 'center',\r\n                            color: 'rgba(255, 255, 255, 0.5)'\r\n                        }}>\r\n                            <div style={{ fontSize: '3rem', marginBottom: '20px' }}>🎵</div>\r\n                            <p>No tracks found</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Overlay when sidebar is open */}\r\n            {showSidebar && (\r\n                <div\r\n                    style={{\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: '100vw',\r\n                        height: '100vh',\r\n                        background: 'rgba(0, 0, 0, 0.3)',\r\n                        zIndex: 999\r\n                    }}\r\n                    onClick={() => setShowSidebar(false)}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}